name: Build

on:
  release:
    types: [published]
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - CHANGELOG.md

env:
  PROJECT_NAME: diator

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 9
          submodules: false

      - name: Use Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt

      - name: Run tests
        run: |
          python -m pytest tests/
      - name: Run flake8
        run: |
          python -m flake8 src/ tests/ --exit-zero
      - name: Run vulture
        run: |
          python -m vulture src/ --min-confidence 70 --exclude src/diator/container.py
      - name: Run Mypy
        run: |
          python -m mypy src/ tests/ --pretty

    services:
      redis:
        image: redis:alpine
        env:
          REDIS_HOST: localhost
          REDIS_PORT: 6379
        ports:
          - 6379:6379

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release'
    steps:
      - name: Download a distribution artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Use Python 3.11
        uses: actions/setup-python@v1
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install twine

      - name: Publish distribution ðŸ“¦ to Test PyPI
        run: |
          twine upload -r testpypi dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}

      - name: Publish distribution ðŸ“¦ to PyPI
        run: |
          twine upload -r pypi dist/*
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
